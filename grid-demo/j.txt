[
  '{{repeat(5, 3000)}}',
  {
    Issue: '{{company()}}',
    Product_Type: function () {
      var types = ['PFD', 'IG', 'IPO'];
      return types[Math.floor(Math.random() * (3 - 0)) + 0];
    },
    Tranche: '{{firstName()}}',
    Pricing_Date: '{{date(new Date(2014, 0, 1), new Date(), "YYYY-MM-ddThh:mm:ss Z")}}',
    Indication: function getRandomInt(min, max) {
      return Math.floor(Math.random() * (250000000 - 120000)) + 120000;
    },
    Allocation: function getRandomInt(min, max) {
      return this.Indication - Math.floor(Math.random() * (3500000 - 15000)) + 15000;
    },
    Percent_allocation: function (Indication, Allocation){
      return Math.floor((this.Allocation / this.Indication) * 100) + '%';
    },
    Hedge_Type: function () {
      var types = ['TYPE_1', 'TYPE_2', 'TYPE_3', 'TYPE_4', 'TYPE_5', 'TYPE_6', 'TYPE_7', 'TYPE_8', 'TYPE_9', 'TYPE_10'];
      return types[Math.floor(Math.random() * (11 - 0)) + 0];
    },
    Security_Type: function () {
      var types = ['SEC_1', 'SEC_2', 'SEC_3', 'SEC_4', 'SEC_5', 'SECE_6', 'SEC_7', 'SECA', 'SECB', 'SECC'];
      return types[Math.floor(Math.random() * (11 - 0)) + 0];
    },
    Retention_Allocation: function getRandomInt(min, max) {
      return Math.floor(Math.random() * (250000000 - 120000)) + 120000;
    },
    Sales_Person: '{{firstName()}} {{surname()}}',
    Region: '{{country()}}',



    Some: '{{floating(0, 10, 2)}}'
  }
]


'{{date(new Date(2014, 0, 1), new Date(), "YYYY-MM-ddThh:mm:ss Z")}}'





[
  '{{repeat(5, 500)}}',
  {
    issue: '{{company()}}',
    productType: function () {
      var types = ['PFD', 'IG', 'IPO'];
      return types[Math.floor(Math.random() * (3 - 0)) + 0];
    },
    tranche: '{{firstName()}}',
    pricingDate: '{{date(new Date(2014, 0, 1), new Date(), "YYYY-MM-ddThh:mm:ss Z")}}',
    indication: function getRandomInt(min, max) {
      return Math.floor(Math.random() * (250000000 - 120000)) + 120000;
    },
    allocation: function getRandomInt(min, max) {
      return this.indication - Math.floor(Math.random() * (3500000 - 150000)) + 150000;
    },
    allocationPercentage: function (indication, allocation){
      return parseFloat((this.Allocation / this.Indication).toFixed(2));
    },
     retentionAllocation: function getRandomInt(min, max) {
      return Math.floor(Math.random() * (250000000 - 120000)) + 120000;
    },
    salesPerson: '{{firstName()}} {{surname()}}',
    region: '{{country()}}'
  }
]